var path = require('path');
var fs = require('fs');
module.exports = function (dir, option) {
  dir = dir || process.cwd();
  option = option || {};
  var reactTools = option.reactTools;
  return function* (next) {
    //return yield *next;
    var fileType = (this.url.match(/\.(jsx?)$/) || []).shift();
    if (fileType) {
      var yiminghe = this.yiminghe = this.yiminghe || {};
      var file, content = this.body;
      if (!content) {
        file = path.join(dir, this.url);
        if (!fs.existsSync(file)) {
          file = file.replace(/\.js$/, '.jsx');
          if (!fs.existsSync(file)) {
            return yield *next;
          }
        }
        content = fs.readFileSync(file, 'utf-8');
        yiminghe.source = content;
      }
      var source = content;
      content = reactTools.transformWithDetails(content, {
        sourceMap: true,
        harmony: true,
        filename: this.url
      });
      content.sourceMap.sources = [this.url];

      var code = content.code;
      this.set('Content-Type', 'application/javascript;charset=utf-8');
      this.set('Content-Length', Buffer.byteLength(code));
      this.body = code;

      yiminghe.sourceMaps = yiminghe.sourceMaps || [];
      yiminghe.sourceMaps.push(content.sourceMap);
      if (option.next && option.next.call(this)) {
        yield * next;
      }
    } else {
      yield *next;
    }
  };
};
